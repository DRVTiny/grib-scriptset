sub dbgShowHsh {
 my ($H,$L,$K)=@_;
 if ($K ne undef) {
  print 'TSH;'.join(';',@{$K})."\n".$_.';'.join(';',@{$H->{$_}}{@{$K}})."\n" foreach @{$L};
 } else {
  foreach my $lbl ( @{$L} ) {
   my @t=sort { $a<=>$b } keys %{$H->{$lbl}};
   print 'TSH;'.join(';',@t)."\n".$lbl.';'.join(';',@{$H->{$lbl}}{@t})."\n";
  }
 }
}

sub getFactPreDelta {
 my ($mp,$factV,$predV)=@_;
 return(9999999) unless ( ($factV ne undef) and ($predV ne undef) );
 my $d=$predV-$factV;
 if ($mp=~m/^(?:WINDD|APCP)/) {
  $d=abs($d);
  return nearest(0.01,($d>180?360-$d:$d)) if ($mp eq 'WINDD');
 }
 return nearest(0.01,$d);
}

sub cnvFactT {
 my $T=shift;
 return defined($T)?$T+ZEROC:undef;
}

sub cnvFactPres {
 my $P=shift;
 return defined($P)?$P*100:undef;
}

sub tsh2date {
 my $tsh=shift;
 my @t=@{[localtime($tsh*3600)]}[5,4,3,2];
 $t[0]+=1900; $t[1]++;
 return ( map { sprintf('%02g',$_) } @t );
}

sub fmbh2date {
 my ($Year,$Month,$fmbh)=@_;
 return ( map { sprintf('%02g',$_) } (Add_Delta_Days($Year,$Month,1,int($fmbh/24)),$fmbh%24) );
}

sub BASHArr2List { 
 my $ArrDef=shift; chomp $ArrDef;
 my ($ArrName)=($ArrDef=~m/^declare -a ([^=]+)=/);
 $ArrDef=~s%(?:^declare -a ${ArrName}='\(|\)'$)%%g;
 $ArrDef=~s%(\[[0-9]+\]="[^"]+")\s*%\$${ArrName}$1;\n%g;
 chomp $ArrDef;
 return ($ArrName,$ArrDef);
}

sub approx2grid {
  my ($pLat,$pLon,$GridStepLat,$GridStepLon)=@_;
  my $lonLeft=int($pLon/$GridStepLon)*$GridStepLon;
  my $lonRight=$lonLeft+$GridStepLon;
  my $latDown=int($pLat/$GridStepLat)*$GridStepLat;
  my $latUp=$latDown+$GridStepLat;
  return ( {lat=>$latUp,lon=>$lonLeft},
           {lat=>$latUp,lon=>$lonRight},
           {lat=>$latDown,lon=>$lonRight},
           {lat=>$latDown,lon=>$lonLeft}
         );
}

sub Add_APCP12_To_Pred {
 my ($fact,$pred,$tshBaseDay)=@_;
 my $p_tsh=$tshBaseDay;
 foreach my $tsh12 ( sort { $a<=>$b } grep { $_>=$tshBaseDay } keys %{$fact->{APCP12}} ) {
  my $precp=0;
  for (my $tsh=$p_tsh+$STEP_PRED_H; $tsh<=$tsh12; $tsh+=$STEP_PRED_H) {
   $precp+=$pred->{APCP}{$tsh};
  }
  $pred->{APCP12}{$tsh12}=nearest(0.01,$precp);
  $p_tsh=$tsh12;
 }
}

sub outPred {
 my ($pred,$lbls,$tshBaseDay,$maxPredH,$stepPredH,$predDir)=@_;
 my $mode='standart';
 my @mem=( 'PREDH;'.join(';',@{$lbls}) );
 for (my $tsh=$tshBaseDay; $tsh<=$tshBaseDay+$maxPredH; $tsh+=$stepPredH) {
  push @mem, ($tsh-$tshBaseDay).';'.(join ';', map { nearest(0.01,$pred->{$_}{$tsh}) } @{$lbls});
 }
 print "tshBaseDay=${tshBaseDay}:::".join( ';',@{[tsh2date($tshBaseDay)]}[0,1,2] ).":::\n";
 open(PRED,'>',$predDir.'/'.join( '',@{[tsh2date($tshBaseDay)]}[0,1,2] )."_${mode}.csv");
 print PRED join("\n", @mem);
 close(PRED);
 
 @mem=();
 return 1;
}

return 1;