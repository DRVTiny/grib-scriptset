#!/bin/bash
doShowUsage () {
cat <<EOF
 ${slf:-${0##*/}} [-s CSV_SOURCE_PATH] [-d XLS_DEST_PATH ] [-H PREDICT_HOURS ] [-D] [-x] latitude longitude date hour
EOF
 return 0
}

(( $# )) || { doShowUsage; exit 1; }

ncep_pth='/store/GRIB/cooked/GFS4/NCEP'
predict_hours=120
flReCreateMP2LBL=0
while getopts 's: d: H: Dx' k; do
 case $k in
  s) ncep_pth="$OPTARG" ;;
  d) dest_pth="$OPTARG" ;;
  H) predict_hours="$OPTARG" ;;
  D) set -x ;;
  x) flReCreateMP2LBL=1 ;;
  \?) doShowUsage ;;
 esac
done
shift $((OPTIND-1))

lat="$1"
lon="$2"
bdate="$3"
{ [[ $4 =~ ^[0-9]+$ ]] && declare -i bhours=$4; } || { doShowUsage; exit 1; }

if (( flReCreateMP2LBL )); then
 declare  -A MP2LBL
 for mp in 'TCDC-entire_atmosphere_(considered_as_a_single_layer)' {PRES,GUST,APCP,CSNOW,CRAIN,CICEP,CFRZR}-surface; do
  MP2LBL["$mp"]="${mp%%-*}"
 done

 for mp in {{U,V}GRD,RH,TMP}-{50,70,85}0_mb; do
  MP2LBL["$mp"]=$(sed -r 's%([UV]|T|RH)((GRD|MP)?)-(([57]0|85)0)_mb%\1\4%' <<<"$mp")
 done

 MP2LBL+=(['TMAX-2_m_above_ground']='Tmax' ['TMIN-2_m_above_ground']='Tmin' ['TMP-2_m_above_ground']='T')
 MP2LBL+=(['UGRD-10_m_above_ground']='U10m' ['VGRD-10_m_above_ground']='V10m' ['RH-2_m_above_ground']='RH2m')
else
 declare -A MP2LBL='(
		[UGRD-10_m_above_ground]="U10m"
		[UGRD-850_mb]="U850"
		[CSNOW-surface]="CSNOW"
		[CFRZR-surface]="CFRZR"
		[CRAIN-surface]="CRAIN"
		[TMP-500_mb]="T500"
		[RH-2_m_above_ground]="RH2m"
		[TMAX-2_m_above_ground]="Tmax"
		[GUST-surface]="GUST"
		[RH-700_mb]="RH700"
		[PRES-surface]="PRES"
		[TMP-850_mb]="T850"
		["TCDC-entire_atmosphere_(considered_as_a_single_layer)"]="TCDC"
		[CICEP-surface]="CICEP"
		[VGRD-10_m_above_ground]="V10m"
		[TMP-700_mb]="T700"
		[RH-500_mb]="RH500"
		[APCP-surface]="APCP"
		[UGRD-500_mb]="U500"
		[TMIN-2_m_above_ground]="Tmin"
		[VGRD-500_mb]="V500"
		[TMP-2_m_above_ground]="T"
		[UGRD-700_mb]="U700"
		[VGRD-850_mb]="V850"
		[RH-850_mb]="RH850"
		[VGRD-700_mb]="V700"
 )'
fi

declare -A NotInRA=(
		['APCP-surface']=1
		['CFRZR-surface']=1
		['CICEP-surface']=1
		['CRAIN-surface']=1
		['CSNOW-surface']=1
		['TCDC-entire_atmosphere_(considered_as_a_single_layer)']=1
		['TMAX-2_m_above_ground']=1
		['TMIN-2_m_above_ground']=1
)                                                                

declare -a LBLOrder=(
		'PRES'
		'TCDC'
		'CSNOW'
		'CRAIN'
		'CICEP'
		'CFRZR'
		'APCP'
		'GUST'
		'V500'
		'V700'
		'V850'
		'V10m'
		'U500'
		'U700'
		'U850'
		'U10m'
		'RH500'
		'RH700'
		'RH850'
		'RH2m'
		'T500'
		'T700'
		'T850'
		'Tmax'
		'Tmin'
		'T'
)

declare  -A LBL2MP

for mp in ${!MP2LBL[@]}; do
 LBL2MP[${MP2LBL["$mp"]}]="$mp"
done

bdate=${bdate//-/}
if ! [[ $bdate =~ ^(20[0-9]{2})(0[1-9]|1[0-2])(0[1-9]|[1-2][0-9]|3[01])$ ]]; then 
 if [[ $bdate =~ ^(0[1-9]|[1-2][0-9]|3[01])(0[1-9]|1[0-2])(20[0-9]{2})$ ]]; then
  bdate="${BASH_REMATCH[3]}${BASH_REMATCH[2]}${BASH_REMATCH[1]}"
 else
  echo 'Wrong date format!'; exit 1
 fi
fi

bhours=(bhours/6)*6
zz_bhours=$(printf '%02g' $bhours)

lola="${lon}00000, ${lat}00000"

src_pth="${ncep_pth}/${bdate}"
if [[ ! -d $src_pth ]]; then
 src_pth="${ncep_pth}/${bdate:0:4}-${bdate:4:2}-${bdate:6:2}"
 [[ -d $src_pth ]] || exit 112
fi

cd "${dest_pth-.}"

csvFC="${bdate}_${zz_bhours}00_${lat//./}-${lon//./}.csv"

exec 3<&1 1>"$csvFC"
echo "time,$(seq 0 3 ${predict_hours} | tr '\n' ',')"
for lbl in ${LBLOrder[@]}; do
 mp=${LBL2MP["$lbl"]}
 echo -n "$lbl"
 for si in $(seq -f '%03g' 0 3 ${predict_hours}); do
  if [[ $si == '000' && ${NotInRA["$mp"]} ]]; then
   echo -n ',99999'
   continue
  else
   csvSource="${src_pth}/gfs_4_${bdate}_${zz_bhours}00_${si}_${mp}.csv"
   if [[ ! -f ${csvSource} ]]; then
    if [[ -f ${csvSource}.gz ]]; then
     csvSource="(zcat \"${csvSource}.gz\")"
    else
     echo -n ',99999'
     continue
    fi
   fi
   echo -n $(eval "fgrep '$lola' <$csvSource" | awk -F', ?' '{print "," $3}' | tr -d '\n')
  fi
 done
 echo
done
exec 1<&3

xlsFC=${csvFC/.csv/.xls}
unix2dos -n $csvFC ${csvFC%.csv}_Windows.csv
csv2xls $xlsFC $csvFC
mv $csvFC ${csvFC%.csv}_Unix.csv
